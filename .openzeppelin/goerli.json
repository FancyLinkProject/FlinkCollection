{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x46EB06b9C11eAd5928828D694C3a58f0Ede2F618",
    "txHash": "0x6909f18f5a52297beb146b49ebef7a1384d488af57cea319168e83fa372dd680"
  },
  "proxies": [
    {
      "address": "0x1f5c523a3170362dd3db25f224673477111A5BCb",
      "txHash": "0x9e842d87c754339280d367ac6d83bee1c7c615c8735f6eecde82fb342d502ab7",
      "kind": "transparent"
    }
  ],
  "impls": {
    "35412de52bc24ccfca8533bb88b172b84daf19e6d4b84a1bc7b10f68acc2a04f": {
      "address": "0x486Fc0869196A2A39AAFFeA605A79D65F7CBC707",
      "txHash": "0x4940aa6590079969376040e4388efbbd366a55fab8917f68bb8584c7b406b99d",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "contractLevelURI",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "ContractUri",
            "src": "contracts/FlinkCollection/ContractUri.sol:6"
          },
          {
            "label": "domainSeperator",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32",
            "contract": "EIP712Base",
            "src": "contracts/FlinkCollection/common/meta-transactions/EIP712Base.sol:22"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "FancyLinkCollection",
            "src": "contracts/FlinkCollection/FancyLinkCollection.sol:28"
          },
          {
            "label": "proxyRegistryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "FancyLinkCollection",
            "src": "contracts/FlinkCollection/FancyLinkCollection.sol:31"
          },
          {
            "label": "sharedProxyAddresses",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "FancyLinkCollection",
            "src": "contracts/FlinkCollection/FancyLinkCollection.sol:33"
          },
          {
            "label": "tokenInfo",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(TokenInfo)4708_storage)",
            "contract": "FancyLinkCollection",
            "src": "contracts/FlinkCollection/FancyLinkCollection.sol:35"
          },
          {
            "label": "signatureStatus",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes_memory_ptr,t_struct(SignatureStatus)4713_storage)",
            "contract": "FancyLinkCollection",
            "src": "contracts/FlinkCollection/FancyLinkCollection.sol:37"
          },
          {
            "label": "infoResolver",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_address))",
            "contract": "FancyLinkCollection",
            "src": "contracts/FlinkCollection/FancyLinkCollection.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC1155Storage)102_storage": {
            "label": "struct ERC1155Upgradeable.ERC1155Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ERC1155SupplyStorage)197_storage": {
            "label": "struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage",
            "members": [
              {
                "label": "_totalSupply",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_totalSupplyAll",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ERC1155URIStorageStorage)686_storage": {
            "label": "struct ERC1155SupplyUriUpgradeable.ERC1155URIStorageStorage",
            "members": [
              {
                "label": "_baseURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)254_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)315_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_struct(SignatureStatus)4713_storage)": {
            "label": "mapping(bytes => struct SignatureStatus)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenInfo)4708_storage)": {
            "label": "mapping(uint256 => struct TokenInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(SignatureStatus)4713_storage": {
            "label": "struct SignatureStatus",
            "members": [
              {
                "label": "used",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenInfo)4708_storage": {
            "label": "struct TokenInfo",
            "members": [
              {
                "label": "author",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contentDigest",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "parentId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "supply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "kind",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "version",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "extraData",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "initialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC1155URIStorage": [
            {
              "contract": "ERC1155SupplyUriUpgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/FlinkCollection/ERC1155SupplyUriUpgradeable.sol:11",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC1155SupplyUriUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/FlinkCollection/ERC1155SupplyUriUpgradeable.sol:13",
              "offset": 0,
              "slot": "1"
            }
          ],
          "erc7201:openzeppelin.storage.ERC1155Supply": [
            {
              "contract": "ERC1155SupplyUpgradeable",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:25",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC1155SupplyUpgradeable",
              "label": "_totalSupplyAll",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:26",
              "offset": 0,
              "slot": "1"
            }
          ],
          "erc7201:openzeppelin.storage.ERC1155": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:29",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "38103377754d7e256442d7131711bc3accad870b5c3b20e7915a83bcced9cbfe": {
      "address": "0x735743ff1C068C32743A118E50a2Bee5Df894D9B",
      "txHash": "0x064d68f0c52758ece348bcfba8e53d870960f1d0762f7ceb3b11698630de7150",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "contractLevelURI",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "ContractUri",
            "src": "contracts/FlinkCollection/ContractUri.sol:6"
          },
          {
            "label": "domainSeperator",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32",
            "contract": "EIP712Base",
            "src": "contracts/FlinkCollection/common/meta-transactions/EIP712Base.sol:22"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "FancyLinkCollection",
            "src": "contracts/FlinkCollection/FancyLinkCollection.sol:28"
          },
          {
            "label": "proxyRegistryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "FancyLinkCollection",
            "src": "contracts/FlinkCollection/FancyLinkCollection.sol:31"
          },
          {
            "label": "sharedProxyAddresses",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "FancyLinkCollection",
            "src": "contracts/FlinkCollection/FancyLinkCollection.sol:33"
          },
          {
            "label": "tokenInfo",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(TokenInfo)4708_storage)",
            "contract": "FancyLinkCollection",
            "src": "contracts/FlinkCollection/FancyLinkCollection.sol:35"
          },
          {
            "label": "signatureStatus",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes_memory_ptr,t_struct(SignatureStatus)4713_storage)",
            "contract": "FancyLinkCollection",
            "src": "contracts/FlinkCollection/FancyLinkCollection.sol:37"
          },
          {
            "label": "infoResolver",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_address))",
            "contract": "FancyLinkCollection",
            "src": "contracts/FlinkCollection/FancyLinkCollection.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC1155Storage)102_storage": {
            "label": "struct ERC1155Upgradeable.ERC1155Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ERC1155SupplyStorage)197_storage": {
            "label": "struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage",
            "members": [
              {
                "label": "_totalSupply",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_totalSupplyAll",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ERC1155URIStorageStorage)686_storage": {
            "label": "struct ERC1155SupplyUriUpgradeable.ERC1155URIStorageStorage",
            "members": [
              {
                "label": "_baseURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)254_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)315_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_struct(SignatureStatus)4713_storage)": {
            "label": "mapping(bytes => struct SignatureStatus)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenInfo)4708_storage)": {
            "label": "mapping(uint256 => struct TokenInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(SignatureStatus)4713_storage": {
            "label": "struct SignatureStatus",
            "members": [
              {
                "label": "used",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenInfo)4708_storage": {
            "label": "struct TokenInfo",
            "members": [
              {
                "label": "author",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contentDigest",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "parentId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "supply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "kind",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "version",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "extraData",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "initialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC1155URIStorage": [
            {
              "contract": "ERC1155SupplyUriUpgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "contracts/FlinkCollection/ERC1155SupplyUriUpgradeable.sol:11",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC1155SupplyUriUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/FlinkCollection/ERC1155SupplyUriUpgradeable.sol:13",
              "offset": 0,
              "slot": "1"
            }
          ],
          "erc7201:openzeppelin.storage.ERC1155Supply": [
            {
              "contract": "ERC1155SupplyUpgradeable",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:25",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC1155SupplyUpgradeable",
              "label": "_totalSupplyAll",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:26",
              "offset": 0,
              "slot": "1"
            }
          ],
          "erc7201:openzeppelin.storage.ERC1155": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:29",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
